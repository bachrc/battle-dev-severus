openapi: "3.0.0"
info:
  description: "This describes how to talk to the Battle Dev Severus. Be nice with him."
  version: "1.0.0"
  title: "Battle Dev Severus"
  contact:
    email: "8.bachrc@gmail.com"
  license:
    name: "WTFPL"
    url: "http://www.wtfpl.net/about/"

tags:
  - name: "problems"
    description: "Everything related to problems"
  - name: "authentication"
    description: "Related to authentication to the app"

paths:
  /problems:
    get:
      tags:
        - "problems"
      summary: "Returns every problem summary"
      operationId: "getProblems"
      parameters: []
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProblemSummary'

  /problems/{problemId}:
    get:
      tags:
        - "problems"
      summary: "Returns problem detail"
      operationId: "getProblemById"
      parameters:
        - name: "problemId"
          in: "path"
          description: "ID of the problem to fetch"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Problem not found"

  /login:
    post:
      tags:
        - "authentication"
      summary: "Authentication endpoint"
      description: "Returns the authentication JWT Token"
      operationId: "login"
      requestBody:
        description: "The body for the authentication"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: "successful login"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
        401:
          description: "invalid credentials"

  /whoami:
    get:
      tags:
        - "authentication"
      summary: "Get details on yourself"
      description: "Returns detailed on the connected user"
      operationId: "whoami"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        401:
          description: "not connected"


components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ProblemSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    Problem:
      allOf:
        - $ref: '#/components/schemas/ProblemSummary'
        - type: object
          properties:
            contenu:
              type: string
            question:
              type: string

    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    LoginSuccess:
      type: object
      properties:
        name:
          type: string
        token:
          type: string

    Whoami:
      type: object
      properties:
        id_utilisateur:
          type: integer
          format: int64
        prenom:
          type: string
        nom:
          type: string